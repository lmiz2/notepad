package main

import "sort"

func fourSum(nums []int, target int) [][]int {
	sort.Ints(nums)
	return kSum(nums, target, 4)
}

func kSum(nums []int, target int, k int) [][]int {
	res := [][]int{}
	if len(nums) == 0 || nums[0]*k > target || target > nums[len(nums)-1]*k {
		return res
	}
	if k == 2 {
		return twoSum(nums, target)
	}
	for i := range nums { // {-3, -2, -1, 0, 0, 1, 2, 3} 0~7
		if i == 0 || nums[i-1] != nums[i] {
			for _, set := range kSum(nums[i+1:], target-nums[i], k-1) {
				res = append(res, append([]int{nums[i]}, set...))
			}
		}
	}
	return res
}

func twoSum(nums []int, target int) [][]int {
	res := [][]int{}
	lo, hi := 0, len(nums)-1
	for lo < hi {
		sum := nums[lo] + nums[hi]
		if sum < target || (lo > 0 && nums[lo] == nums[lo-1]) {
			lo += 1
		} else if sum > target || (hi < len(nums)-1 && nums[hi] == nums[hi+1]) {
			hi -= 1
		} else {
			res = append(res, []int{nums[lo], nums[hi]})
			lo += 1
			hi -= 1
		}
	}
	return res
}
